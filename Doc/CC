########################################################################################
OptimizationOpts=()
OptimizationOpts=-O2

AddOn=false
AddOn=true

LangOpts=(
  -m32 '-std=c99'
)

LangOpts=(
  #-m32
  '-std=gnu99'
  -m64
)

opts = ($LangOpts $OptimizationOpts)

SecurityCompOpts=(
  -fPIE
  -fstack-protector   ## does not work on older systems
)
SecurityLinkOpts=(
  -pie 
  -Wl,-z,now,-z,relro  
)

########################################################################################
########################################################################################
fn Compile Link { cmd=() securityOpts=() {
  #--------------------------------------------------------------------
  if (~ $0 Link) {
    securityOpts=( $SecurityCompOpts )
  } else {
    securityOpts=( $SecurityCompOpts $SecurityLinkOpts)
  }
  #--------------------------------------------------------------------
  ####gcc $opts -DHAVE_CONFIG_H -I.    -fPIE  -fstack-protector -Wall -g $OptimizationOpts -MT $f.o -MD -MP -MF .deps/$f.Tpo -c -o $f.o $f.c

  cmd = (gcc $opts $securityOpts  $*)
  echo $cmd
  $cmd
}}

########################################################################################
fn Comp Lnk { f=$1 {
  if (~ $0 Comp) {
    Compile -DHAVE_CONFIG_H -I.    -Wall -g  -MT $f.o -MD -MP -MF .deps/$f.Tpo -c -o $f.o $f.c
  } else {
    Link -Wall -g    -o $f $f.o  
  }
}}

########################################################################################
########################################################################################


########################################################################################
for (s in mksignal mkstatval) {
  Comp $s
  Lnk $s
}

## Signal names for sigmsgs.c, must be done before compiling rc
./mksignal

## Status value defines, must be done before compiling rc
## Making mkstatval does not depend on singals created by mksignal
./mkstatval > statval.h

########################################################################################
## Compile rc source
sources=()

if ($AddOn) {
  sources=($sources addon)
}
sources=(
  $sources
  builtins
  except
  exec
  fn
  footobar
  getopt
  glob
  glom
  hash
  heredoc
  input
)

if ($AddOn) {
  sources=($sources let.tab)
}

sources=(
  $sources
  lex
  list
  main
  match
  nalloc
  open
  parse
  print
  redir
  signal
  status
  tree
  utils
  var
  wait
  walk
  which
  sigmsgs
  edit-null
  system
)


########################################################################################
## Link rc
rc_objs = $sources^.o

########################################################################################
for (s in $sources) {
  Comp $s
}
Link -Wall -g    -o rc     $rc_objs

########################################################################################
## Make test (trip)
Comp tripping
Lnk tripping


