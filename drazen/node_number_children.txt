/* This is C99 initialization syntax. */

int node_to_child_count[33] = {
    [nBang]     = 1,
    [nNowait]   = 1,
    [nCase]     = 1,
    [nCount]    = 1,
    [nFlat]     = 1,
    [nRmfn]     = 1,
    [nSubshell] = 1,
    [nVar]      = 1,

    [nAndalso]  = 2,
    [nAssign]   = 2,
    [nBackq]    = 2,
    [nBody]     = 2,
    [nBrace]    = 2,
    [nConcat    = 2,
    [nElse]     = 2,
    [nEpilog]   = 2,
    [nIf]       = 2,
    [nNewfn]    = 2,
    [nCbody     = 2,
    [nOrelse]   = 2,
    [nPre]      = 2,
    [nArgs]     = 2,
    [nSwitch    = 2,
    [nMatch]    = 2,
    [nVarsub]   = 2,
    [nWhile]    = 2,
    [nLappend]  = 2,

    [nForin]    = 3,
    [nRedir]    = 3,
    [nNmpipe]   = 3,
    [nDup]      = 3,
    [nWord]     = 3,

    [nPipe]     = 4,
};

typedef struct ChildCountToNodes {
    int m_NumNodes;
    nodetype m_Nodes[19];
} ChildCountToNodes;

ChildCountToNodes child_count_to_nodes[4] = {
    [0] = {
        .m_NumNodes = 0
    },
    [1] = {
        .m_NumNodes = 8,
        .m_Nodes = {
            nBang,
            nNowait,
            nCase,
            nCount,
            nFlat,
            nRmfn,
            nSubshell,
            nVar,
        },
    },

    [2] = {
        .m_NumNodes = 19,
        .m_Nodes = {
            nAndalso,
            nAssign,
            nBackq,
            nBody,
            nBrace,
            nConcat    = 2,
            nElse,
            nEpilog,
            nIf,
            nNewfn,
            nCbody     = 2,
            nOrelse,
            nPre,
            nArgs,
            nSwitch    = 2,
            nMatch,
            nVarsub,
            nWhile,
            nLappend,
        },
    },
    [3] = {
        .m_NumNodes = 5,
        .m_Nodes = {
            nForin,
            nRedir,
            nNmpipe,
            nDup,
            nWord,
        },
    },
    [4] = {
        .m_NumNodes = 1,
        .m_Nodes = {
            nPipe,
        },
    },
};
